import './assets/css/index.css';
import { IEditorData, IEditorOption, IEditorResult } from './interface/Editor';
import { IElement } from './interface/Element';
import { Command } from './core/command/Command';
import { Listener } from './core/listener/Listener';
import { RowFlex } from './dataset/enum/Row';
import { ElementType } from './dataset/enum/Element';
import { Register } from './core/register/Register';
import { IContextMenuContext, IRegisterContextMenu } from './interface/contextmenu/ContextMenu';
import { EditorComponent, EditorZone, EditorMode, PageMode, PaperDirection, WordBreak } from './dataset/enum/Editor';
import { EDITOR_COMPONENT } from './dataset/constant/Editor';
import { IWatermark } from './interface/Watermark';
import { ControlType, ImageDisplay } from './dataset/enum/Control';
import { INavigateInfo } from './core/draw/interactive/Search';
import { KeyMap } from './dataset/enum/KeyMap';
import { BlockType } from './dataset/enum/Block';
import { IBlock } from './interface/Block';
import { ILang } from './interface/i18n/I18n';
import { VerticalAlign } from './dataset/enum/VerticalAlign';
import { TableBorder, TdBorder } from './dataset/enum/table/Table';
import { MaxHeightRatio, NumberType } from './dataset/enum/Common';
import { TitleLevel } from './dataset/enum/Title';
import { ListStyle, ListType } from './dataset/enum/List';
import { ICatalog, ICatalogItem } from './interface/Catalog';
import { UsePlugin } from './interface/Plugin';
import { EventBus } from './core/event/eventbus/EventBus';
import { EventBusMap } from './interface/EventBus';
import { IRangeStyle } from './interface/Listener';
import { Override } from './core/override/Override';
import { LETTER_CLASS } from './dataset/constant/Common';
import { IYdoc, IYdocInfo } from './interface/Websocket';
import { Ydoc } from './core/websocket/Websocket';
type IEditor = {
    container: HTMLDivElement;
    data: IEditorData | IElement[];
    options: IEditorOption;
    socketinfo?: IYdocInfo;
};
export default class Editor {
    command: Command;
    listener: Listener;
    eventBus: EventBus<EventBusMap>;
    override: Override;
    register: Register;
    destroy: () => void;
    use: UsePlugin;
    ydoc: IYdoc | undefined;
    getYDoc: () => Ydoc | null;
    closeWebsocket: () => void;
    constructor(payload: IEditor);
}
export { EDITOR_COMPONENT, LETTER_CLASS, Editor, RowFlex, VerticalAlign, EditorZone, EditorMode, ElementType, ControlType, EditorComponent, PageMode, ImageDisplay, Command, KeyMap, BlockType, PaperDirection, TableBorder, TdBorder, MaxHeightRatio, NumberType, TitleLevel, ListType, ListStyle, WordBreak };
export type { IElement, IEditorData, IEditorOption, IEditorResult, IContextMenuContext, IRegisterContextMenu, IWatermark, INavigateInfo, IBlock, ILang, ICatalog, ICatalogItem, IRangeStyle };
